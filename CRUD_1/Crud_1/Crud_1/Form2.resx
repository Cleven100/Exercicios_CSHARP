<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAAjCAIAAADQT1mxAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAeBJREFUaEPtmr9rwkAUgPuHdujQ1aHYVXB0cSpFCF06tIODFnEwQwMVCRQRApIh
        LUiohAZrCAYSIQTSd0m16aVaKvq81nd8EH33XkI+7keGO4qTdiMNzk7uCscNYuuAWNDLRMPl/LTFdRNb
        BPQy0TSWEWCiuRCxC0g0EiQaCRKNBIlGgkQjQaKRINFI/EHRJa0u5YLCs1/RQ8OH5/PNfuDSsmiGtz5B
        UPYv+pfWNigRAmFFm3YcjjU3iJJB7rndKgQ/Z0CgD5Mc3xjO2f836yoprLUn0+Us8X2jrS7uxmciI7Jo
        8OvcX3YKJR2Wi9h8SuLZkiTHfrkuKrWqwiI1axZHdq9fht9plTepf5uJjoBrtKeyLqZm2uukmU09jP1J
        c1GSFb3MyZOp+iETAaFH9LJrjWi+vDSQldfR2Jt6UQjLTkb0igch8b9EV0w7hCnhj3VLbWmy8WVEk2gu
        mLKJ6ItHf5HGkJ8jEp2yoehZXy0XYcHl9ZUfYPvzNQm2O+VWcQN4t7kj5+62FwTcDOPYMleLbjS15Cst
        l5OgdkewdrAWOE6350KZVoH4oYs+IEg0EiQaCRKNBIlGgkQjQaKRINFIkGgkSDQSTDSdJkWAiabz0bvm
        43x06prG9Y5gJ/6lwTsjVClOHvzr+QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>